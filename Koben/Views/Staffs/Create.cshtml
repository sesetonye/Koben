@model Koben.Models.Staff

@{
    ViewBag.Title = "Create";
}

<div class="holder">
    <h2><i class="glyphicon glyphicon-plus-sign"></i>   Add New Staff Member</h2>

    <div class="centered">
        @using (Html.BeginForm("Create", "Staffs", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>*@


                <div class="form-group">
                    @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input name="Image" type="file" class="btn btn-default btn-file" />
                        @Html.ValidationMessage("Image", @TempData["Error"].ToString(), new { @class = "text-danger" })

                    </div>
                </div>


                <div>

                    <div class="col-md-6">
                        <button class="btn btn-primary btn-block" value="Submit" type="submit">
                            <i class="glyphicon glyphicon-ok"></i> Save
                        </button>

                    </div>

                    <div class="col-md-6">
                        <a href="@Url.Action("Index","Staffs")" class="btn btn-danger btn-block">
                            <i class="glyphicon glyphicon-remove"></i>
                            Cancel
                        </a>
                    </div>

                </div>
            </div>




    }
    </div>
    <br />
    <br />
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
